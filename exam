1)    import numpy as np
def piecewise_linear(x):
    return np.where(x>0,x,0)
x=np.random.rand(4,2)
print("x:",x)
W1=np.random.rand(3,4)
print("W1:",W1)
b1=np.random.rand(3,1)
print("b1:",b1)
W2=np.random.rand(5,3)
print("W2:",W2)
b2 = np.random.rand(1,2)
print("b2:",b2)
z1=np.dot(W1,x)+b1
A1=piecewise_linear(z1)
z2 = np.dot(W2, A1) + b2
A2 = piecewise_linear(z2)
print("Z1:",z1)
print("A1:", A1)
print("Z2:", z2)
print("A2:", A2)






3)   import matplotlib
matplotlib.use('Agg')  # Use the Agg backend for non-interactive plotting

import numpy as np
import matplotlib.pyplot as plt

# Generating data
x1 = np.random.rand(100)
x2 = np.random.rand(100)
y = x1**2 + 2*x2

# Scatter plot (save as PNG)
plt.figure(figsize=(8, 5))
plt.scatter(x2, y, c='blue', alpha=0.7)
plt.title("Scatter plot of x2 vs y")
plt.xlabel("x2")
plt.ylabel("y")
plt.grid(True)
plt.savefig("scatter_plot.png")  # Save the scatter plot to a file
plt.close()  # Close the figure to free up memory

# Histogram plot (save as PNG)
plt.figure(figsize=(8, 5))
plt.hist(y, bins=10, color='orange', edgecolor='black', alpha=0.7)
plt.title("Histogram of y")
plt.xlabel("y")
plt.ylabel("Frequency")
plt.grid(True)
plt.savefig("histogram_plot.png")  # Save the histogram to a file
plt.close()  # Close the figure to free up memory

print("Plots saved as 'scatter_plot.png' and 'histogram_plot.png'.")
